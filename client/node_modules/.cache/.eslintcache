[
  {
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\index.js": "1",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\App.js": "2",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\team\\Cards.jsx": "3",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\helpers\\Context.js": "4",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\navbar\\navbar.jsx": "5",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Fill_Details\\Fill.js": "6",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\SecondLogin\\SecondLogin.js": "7",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Make_a_Comment\\MakeAComment.js": "8",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Edit_Profile\\Edit.js": "9",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Homepage\\Homepage.js": "10",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\About\\About.js": "11",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Error\\Error.js": "12",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Footer\\Footer.js": "13",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Otp Verification\\otpVerification.jsx": "14",
    "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\team\\members.js": "15"
  },
  {
    "size": 534,
    "mtime": 1675711022102,
    "results": "16",
    "hashOfConfig": "17"
  },
  {
    "size": 8887,
    "mtime": 1679672091992,
    "results": "18",
    "hashOfConfig": "17"
  },
  {
    "size": 1468,
    "mtime": 1679667961142,
    "results": "19",
    "hashOfConfig": "17"
  },
  { "size": 88, "mtime": 1675691306684, "results": "20", "hashOfConfig": "17" },
  {
    "size": 8167,
    "mtime": 1679671444567,
    "results": "21",
    "hashOfConfig": "17"
  },
  {
    "size": 12395,
    "mtime": 1679657493563,
    "results": "22",
    "hashOfConfig": "17"
  },
  {
    "size": 11185,
    "mtime": 1679672003758,
    "results": "23",
    "hashOfConfig": "17"
  },
  {
    "size": 12995,
    "mtime": 1679672239824,
    "results": "24",
    "hashOfConfig": "17"
  },
  {
    "size": 12478,
    "mtime": 1679649233612,
    "results": "25",
    "hashOfConfig": "17"
  },
  {
    "size": 23412,
    "mtime": 1679670014664,
    "results": "26",
    "hashOfConfig": "17"
  },
  {
    "size": 7253,
    "mtime": 1679669987794,
    "results": "27",
    "hashOfConfig": "17"
  },
  {
    "size": 268,
    "mtime": 1679419711466,
    "results": "28",
    "hashOfConfig": "17"
  },
  {
    "size": 4015,
    "mtime": 1679649233645,
    "results": "29",
    "hashOfConfig": "17"
  },
  {
    "size": 3493,
    "mtime": 1679668744169,
    "results": "30",
    "hashOfConfig": "17"
  },
  {
    "size": 1820,
    "mtime": 1676833048161,
    "results": "31",
    "hashOfConfig": "17"
  },
  {
    "filePath": "32",
    "messages": "33",
    "suppressedMessages": "34",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0
  },
  "bjutxz",
  {
    "filePath": "35",
    "messages": "36",
    "suppressedMessages": "37",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 3,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": null
  },
  {
    "filePath": "38",
    "messages": "39",
    "suppressedMessages": "40",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 2,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": null
  },
  {
    "filePath": "41",
    "messages": "42",
    "suppressedMessages": "43",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0
  },
  {
    "filePath": "44",
    "messages": "45",
    "suppressedMessages": "46",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 5,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": null
  },
  {
    "filePath": "47",
    "messages": "48",
    "suppressedMessages": "49",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 6,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "50",
    "usedDeprecatedRules": "51"
  },
  {
    "filePath": "52",
    "messages": "53",
    "suppressedMessages": "54",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 7,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": null
  },
  {
    "filePath": "55",
    "messages": "56",
    "suppressedMessages": "57",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 9,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": null
  },
  {
    "filePath": "58",
    "messages": "59",
    "suppressedMessages": "60",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 5,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "61",
    "usedDeprecatedRules": "51"
  },
  {
    "filePath": "62",
    "messages": "63",
    "suppressedMessages": "64",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 17,
    "fixableErrorCount": 0,
    "fixableWarningCount": 1,
    "source": null
  },
  {
    "filePath": "65",
    "messages": "66",
    "suppressedMessages": "67",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": null
  },
  {
    "filePath": "68",
    "messages": "69",
    "suppressedMessages": "70",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0
  },
  {
    "filePath": "71",
    "messages": "72",
    "suppressedMessages": "73",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 8,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": null
  },
  {
    "filePath": "74",
    "messages": "75",
    "suppressedMessages": "76",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 4,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": null
  },
  {
    "filePath": "77",
    "messages": "78",
    "suppressedMessages": "79",
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0
  },
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\index.js",
  [],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\App.js",
  ["80", "81", "82"],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\team\\Cards.jsx",
  ["83", "84"],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\helpers\\Context.js",
  [],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\navbar\\navbar.jsx",
  ["85", "86", "87", "88", "89"],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Fill_Details\\Fill.js",
  ["90", "91", "92", "93", "94", "95"],
  [],
  "import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport './Fill.scss'\r\nimport { LoginContext } from '../../helpers/Context'\r\nimport { useContext } from 'react'\r\n\r\nfunction Fill(props) {\r\n  const {\r\n    user,\r\n    loading,\r\n    setLoading,\r\n    loggedin,\r\n    setLoggedin,\r\n    profile,\r\n    setProfile,\r\n  } = useContext(LoginContext)\r\n  const [message, setMessage] = useState('')\r\n  const [imageSelected, setImageSelected] = useState('')\r\n  const [imageUrl, setImageUrl] = useState('')\r\n  const [verify, setVerify] = useState(false)\r\n  const [imageUploaded, setImageUploaded] = useState(false)\r\n  const [upload, setUploaded] = useState(false)\r\n  const [verify2, setVeriify2] = useState(false)\r\n  const [state, setState] = useState(false)\r\n\r\n  console.log(user)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    const Load = async () => {\r\n      await new Promise((r) => setTimeout(r, 1000))\r\n\r\n      setLoading((loading) => !loading)\r\n    }\r\n\r\n    Load()\r\n  }, [])\r\n\r\n  const uploadImage = () => {\r\n    setUploaded(true)\r\n    console.log(imageSelected)\r\n    const formData = new FormData()\r\n    formData.append('file', imageSelected)\r\n    formData.append('upload_preset', 'profile_img')\r\n    console.log(formData)\r\n\r\n    axios\r\n      .post('https://api.cloudinary.com/v1_1/dimwfie4o/image/upload', formData)\r\n      .then((res) => {\r\n        console.log(res.data.url)\r\n        setImageUrl(res.data.url)\r\n        setImageUploaded(true)\r\n      })\r\n  }\r\n\r\n  const [userData, setUserData] = useState({\r\n    name_: '',\r\n    roll_no: '',\r\n    academic_program: '',\r\n    department: '',\r\n    personal_email_id: '',\r\n    contact_details: '',\r\n    alternate_contact_details: '',\r\n    address: '',\r\n    current_company: '',\r\n    designation: '',\r\n    about: '',\r\n    question_1: '',\r\n    question_2: '',\r\n  })\r\n\r\n  //sending data to store in the database\r\n\r\n  const onSubmit = () => {\r\n    axios\r\n      .post('http://localhost:5000/userData', {\r\n        email: user.email,\r\n        name: userData.name_,\r\n        roll_no: userData.roll_no,\r\n        academic_program: userData.academic_program,\r\n        department: userData.department,\r\n        personal_email_id: userData.personal_email_id,\r\n        contact_details: userData.contact_details,\r\n        alternate_contact_details: userData.alternate_contact_details,\r\n        address: userData.address,\r\n        current_company: userData.current_company,\r\n        designation: userData.designation,\r\n        about: userData.about,\r\n        profile_img: imageUrl,\r\n        question_1: userData.question_1,\r\n        question_2: userData.question_2,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.message)\r\n        setMessage(res.data.message)\r\n        setVerify(true)\r\n        if (\r\n          res.data.message ===\r\n          'Sent a verification email to your personal email id'\r\n        )\r\n          setVeriify2(true)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const resendMail = () => {\r\n    setState(true)\r\n    setTimeout(() => {\r\n      setState(false)\r\n    }, 60000)\r\n\r\n    axios\r\n      .post('http://localhost:5000/resendMail', {\r\n        userId: user.email,\r\n        personalMailId: userData.personal_email_id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const setOptionValue = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <div className=\"spinner\">\r\n          <span class=\"loader\"></span>\r\n        </div>\r\n      )}\r\n      {!loading && (\r\n        <div className=\"container_fill\">\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Quantico&display=swap');\r\n          </style>\r\n          <div className=\"container2\">\r\n            <div className=\"left\">\r\n              <h2> </h2>\r\n              <br />\r\n              <h1 id=\"fill\">Fill your Profile</h1>\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Name*\"\r\n                size=\"60\"\r\n                name=\"name_\"\r\n                value={userData.name}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Roll Number*\"\r\n                size=\"60\"\r\n                name=\"roll_no\"\r\n                value={userData.roll_no}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <select\r\n                name=\"academic_program\"\r\n                id=\"\"\r\n                defaultValue={userData.academic_program}\r\n                style={{ width: '78%' }}\r\n                onChange={setOptionValue}\r\n              >\r\n                <option value=\"\" name=\"Academic Program\" selected disabled>\r\n                  Academic Program\r\n                </option>\r\n                <option\r\n                  value=\"Bachelor of Technology (BTech)\"\r\n                  name=\"academic_program\"\r\n                >\r\n                  Bachelor of Technology (BTech)\r\n                </option>\r\n                <option\r\n                  value=\"Master of Technology (MTech)\"\r\n                  name=\"academic_program\"\r\n                >\r\n                  Master of Technology (MTech)\r\n                </option>\r\n                <option value=\"Master of Science (MSc)\" name=\"academic_program\">\r\n                  Master of Science (MSc)\r\n                </option>\r\n                <option value=\"Five Year BTech + MTech\" name=\"academic_program\">\r\n                  Five Year BTech + MTech\r\n                </option>\r\n                <option value=\"MS (Research)\" name=\"academic_program\">\r\n                  MS (Research)\r\n                </option>\r\n                <option value=\"Doctor of Philosophy\" name=\"academic_program\">\r\n                  Doctor of Philosophy\r\n                </option>\r\n              </select>\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Department*\"\r\n                size=\"60\"\r\n                name=\"department\"\r\n                value={userData.department}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Personal Email ID*\"\r\n                size=\"60\"\r\n                name=\"personal_email_id\"\r\n                value={userData.personal_email_id}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Contact Number*\"\r\n                size=\"60\"\r\n                name=\"contact_details\"\r\n                value={userData.contact_details}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Alternate Contact Number*\"\r\n                size=\"60\"\r\n                name=\"alternate_contact_details\"\r\n                value={userData.alternate_contact_details}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Address*\"\r\n                size=\"60\"\r\n                name=\"address\"\r\n                value={userData.address}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Current Company (if any)\"\r\n                size=\"60\"\r\n                name=\"current_company\"\r\n                value={userData.current_company}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Designation\"\r\n                size=\"60\"\r\n                name=\"designation\"\r\n                value={userData.designation}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              {/* <p id=\"ques\">About Me</p> */}\r\n              <input\r\n                type=\"text\"\r\n                maxLength={350}\r\n                placeholder=\"About Me (50-60 words)\"\r\n                size=\"60\"\r\n                name=\"about\"\r\n                value={userData.about}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <p id=\"ques\">\r\n                <div id=\"disc\">Q1.</div> What will you miss the most after\r\n                graduating?\r\n              </p>\r\n              <input\r\n                type=\"text\"\r\n                maxLength={200}\r\n                placeholder=\"Write your answer in about 20-30 words\"\r\n                size=\"60\"\r\n                name=\"question_1\"\r\n                value={userData.question_1}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <p id=\"ques\">\r\n                Q2. If you had the power to implement a change in college, what\r\n                would it be?\r\n              </p>\r\n              <input\r\n                maxLength={200}\r\n                type=\"text\"\r\n                placeholder=\"Write your answer in about 20-30 words\"\r\n                size=\"60\"\r\n                name=\"question_2\"\r\n                value={userData.question_2}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <div id=\"emailver\">\r\n                {!verify2 && (\r\n                  <button className=\"submit1\" onClick={onSubmit} id=\"sub5\">\r\n                    Submit\r\n                  </button>\r\n                )}\r\n                {verify && <h2 id=\"verificationmessage\">{message}</h2>}\r\n                {verify2 && (\r\n                  <button\r\n                    className=\"submit1\"\r\n                    onClick={resendMail}\r\n                    disabled={state}\r\n                    id=\"sub5\"\r\n                    style={{ color: state ? '#D8D8D8' : '#fec90ad9' }}\r\n                  >\r\n                    Resend Mail\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"right\">\r\n              <span className=\"dot\">\r\n                <img id=\"ip\" src={imageUrl} />\r\n              </span>\r\n              <br />\r\n              <h4 id=\"disclaimer\">\r\n                <div className=\"disc\">Disclaimer:</div> This picture will be\r\n                printed in the yearbook.\r\n              </h4>\r\n              <input\r\n                type=\"file\"\r\n                onChange={(event) => {\r\n                  setImageSelected(event.target.files[0])\r\n                }}\r\n              />\r\n              <button\r\n                id=\"upld\"\r\n                onClick={uploadImage}\r\n                style={{ color: 'white' }}\r\n              >\r\n                Upload Image\r\n              </button>\r\n              {upload && (\r\n                <h3 style={{ color: 'white' }}>\r\n                  {imageUploaded\r\n                    ? 'Image Uploaded'\r\n                    : 'Wait... while image is uploading'}\r\n                </h3>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Fill\r\n",
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\SecondLogin\\SecondLogin.js",
  ["96", "97", "98", "99", "100", "101", "102"],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Make_a_Comment\\MakeAComment.js",
  ["103", "104", "105", "106", "107", "108", "109", "110", "111"],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Edit_Profile\\Edit.js",
  ["112", "113", "114", "115", "116"],
  [],
  "import React, { useContext, useEffect, useState } from 'react'\r\nimport { LoginContext } from '../../helpers/Context'\r\nimport './Edit.scss'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// const temp_USER = {};\r\nconst Edit = () => {\r\n  const { user, loading, setLoading } = useContext(LoginContext)\r\n  const [message, setMessage] = useState('')\r\n  const [imageSelected, setImageSelected] = useState('gfjebwfbweif')\r\n  const [imageUrl, setImageUrl] = useState('')\r\n  const [verify, setVerify] = useState(false)\r\n  const [imageUploaded, setImageUploaded] = useState(false)\r\n  const [userData, setUserData] = useState({})\r\n\r\n  // const email = user.email;\r\n  const [email, setEmail] = useState(user.email)\r\n  useEffect(() => {\r\n    setEmail(user.email)\r\n    // console.log(email);\r\n  })\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    const Load = async () => {\r\n      await new Promise((r) => setTimeout(r, 2500))\r\n\r\n      setLoading((loading) => !loading)\r\n    }\r\n\r\n    Load()\r\n  }, [])\r\n\r\n  const uploadImage = () => {\r\n    console.log(imageSelected)\r\n    const formData = new FormData()\r\n    formData.append('file', imageSelected)\r\n    formData.append('upload_preset', 'profile_image')\r\n    console.log(formData)\r\n\r\n    axios\r\n      .post('https://api.cloudinary.com/v1_1/dheskw46y/image/upload', formData)\r\n      .then((res) => {\r\n        console.log(res.data.url)\r\n        setImageUrl(res.data.url)\r\n        setImageUploaded(true)\r\n      })\r\n  }\r\n\r\n  const [userPEmailOnLoad, setUserPEmailOnLoad] = useState('')\r\n  const [userContactOnLoad, setUserContactOnLoad] = useState('')\r\n  const [changes, setChanges] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userPEmailOnLoad !== userData.personal_email_id ||\r\n      userContactOnLoad !== userData.contact_details\r\n    ) {\r\n      setChanges(true)\r\n    } else {\r\n      setChanges(false)\r\n    }\r\n  })\r\n\r\n  // Getting User Data From Backend\r\n  // useEffect(()=>{\r\n  //   const getUserData = async() => {axios.post('http://localhost:5000/profile', {\r\n  //     email: email\r\n  //   }).then((res)=>{\r\n  //     console.log(res.data.User[0]);\r\n  //     setUserData(res.data.User[0]);\r\n  //     setImageUrl(res.data.User[0].profile_img);\r\n  //   })}\r\n  //   // getUserData();\r\n  //   const timeoutId = setTimeout(() => {\r\n  //     getUserData();\r\n  //   }, 2500); // delay execution by 1 second\r\n\r\n  //   return () => clearTimeout(timeoutId);\r\n\r\n  // }, [])\r\n\r\n  // ***************************************\r\n  useEffect(() => {\r\n    if (user.email !== undefined) {\r\n      const getUserData = async () => {\r\n        axios\r\n          .post('http://localhost:5000/profile', {\r\n            email: user.email, // use user.email directly instead of email state variable\r\n          })\r\n          .then((res) => {\r\n            // console.log(res.data.User[0]);\r\n            setUserData(res.data.User[0])\r\n            setImageUrl(res.data.User[0].profile_img)\r\n            setUserPEmailOnLoad(res.data.User[0].personal_email_id)\r\n            setUserContactOnLoad(res.data.User[0].contact_details)\r\n          })\r\n      }\r\n      getUserData()\r\n    }\r\n  }, [user.email])\r\n\r\n  // *****************************************************************\r\n\r\n  const navigate = useNavigate()\r\n\r\n  //sending data to store in the database\r\n\r\n  const [one_step_verified, setOne_step_verified] = useState(true)\r\n  const [two_step_verified, settwo_step_verified] = useState(true)\r\n\r\n  const onUpdate = () => {\r\n    if (userPEmailOnLoad !== userData.personal_email_id) {\r\n      setOne_step_verified(false)\r\n    }\r\n    if (userContactOnLoad !== userData.contact_details) {\r\n      settwo_step_verified(false)\r\n    }\r\n    axios\r\n      .put('http://localhost:5000/updateUser', {\r\n        email: email,\r\n        name: userData.name,\r\n        roll_no: userData.roll_no,\r\n        academic_program: userData.academic_program,\r\n        department: userData.department,\r\n        personal_email_id: userData.personal_email_id,\r\n        contact_details: userData.contact_details,\r\n        alternate_contact_details: userData.alternate_contact_details,\r\n        address: userData.address,\r\n        current_company: userData.current_company,\r\n        designation: userData.designation,\r\n        about: userData.about,\r\n        profile_img: imageUrl,\r\n        one_step_verified: one_step_verified,\r\n        two_step_verified: two_step_verified,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.message)\r\n        setMessage(res.data.message)\r\n        // setMessage(\"Your Profile has been updated successfully\");\r\n        if (message === 'User data updated successfully') {\r\n          setVerify(true)\r\n          const timetonavigate = setTimeout(() => {\r\n            navigate('/profile')\r\n          }, 2000) // delay execution by 2 second\r\n\r\n          return () => clearTimeout(timetonavigate)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const setOptionValue = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const resendMail = () => {\r\n    console.log('yeah')\r\n    axios\r\n      .post('http://localhost:5000/resendMail', {\r\n        userId: user.email,\r\n        personalMailId: userData.personal_email_id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <div className=\"spinner\">\r\n          <span class=\"loader\"></span>\r\n        </div>\r\n      )}\r\n      {!loading && (\r\n        <div className=\"container\">\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Quantico&display=swap');\r\n          </style>\r\n          <div className=\"container2\">\r\n            <div className=\"left\">\r\n              <h2> </h2>\r\n              <br />\r\n              <h1>Edit your Profile</h1>\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Name*\"\r\n                size=\"60\"\r\n                name=\"name\"\r\n                value={userData.name}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Roll Number*\"\r\n                size=\"60\"\r\n                name=\"roll_no\"\r\n                value={userData.roll_no}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <select\r\n                name=\"academic_program\"\r\n                id=\"\"\r\n                defaultValue={userData.academic_program}\r\n                onChange={setOptionValue}\r\n              >\r\n                <option value=\"\" name=\"Academic Program\" selected disabled>\r\n                  Academic Program\r\n                </option>\r\n                <option\r\n                  value=\"Bachelor of Technology (BTech)\"\r\n                  name=\"academic_program\"\r\n                >\r\n                  Bachelor of Technology (BTech)\r\n                </option>\r\n                <option\r\n                  value=\"Master of Technology (MTech)\"\r\n                  name=\"academic_program\"\r\n                >\r\n                  Master of Technology (MTech)\r\n                </option>\r\n                <option value=\"Master of Science (MSc)\" name=\"academic_program\">\r\n                  Master of Science (MSc)\r\n                </option>\r\n                <option value=\"Five Year BTech + MTech\" name=\"academic_program\">\r\n                  Five Year BTech + MTech\r\n                </option>\r\n                <option value=\"MS (Research)\" name=\"academic_program\">\r\n                  MS (Research)\r\n                </option>\r\n                <option value=\"Doctor of Philosophy\" name=\"academic_program\">\r\n                  Doctor of Philosophy\r\n                </option>\r\n              </select>\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Department*\"\r\n                size=\"60\"\r\n                name=\"department\"\r\n                value={userData.department}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Personal Email ID*\"\r\n                size=\"60\"\r\n                name=\"personal_email_id\"\r\n                value={userData.personal_email_id}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Contact Number*\"\r\n                size=\"60\"\r\n                name=\"contact_details\"\r\n                value={userData.contact_details}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Alternate Contact Number*\"\r\n                size=\"60\"\r\n                name=\"alternate_contact_details\"\r\n                value={userData.alternate_contact_details}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Address*\"\r\n                size=\"60\"\r\n                name=\"address\"\r\n                value={userData.address}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Current Company (if any)\"\r\n                size=\"60\"\r\n                name=\"current_company\"\r\n                value={userData.current_company}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Designation\"\r\n                size=\"60\"\r\n                name=\"designation\"\r\n                value={userData.designation}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"About Me\"\r\n                size=\"60\"\r\n                name=\"about\"\r\n                value={userData.about}\r\n                onChange={(e) =>\r\n                  setUserData({ ...userData, [e.target.name]: e.target.value })\r\n                }\r\n              />\r\n              <br />\r\n              {verify && <h2>{message}</h2>}\r\n              <button className=\"submit1\" onClick={onUpdate}>\r\n                Update\r\n              </button>\r\n              {verify && changes && (\r\n                <button className=\"submit1\" onClick={resendMail}>\r\n                  Resend Mail\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"right\">\r\n              <span className=\"dot\">\r\n                <img id=\"ip\" src={imageUrl} />\r\n              </span>\r\n              {/* <h2> </h2> */}\r\n              <br />\r\n              <h4 id=\"disclaimer\">\r\n                <div className=\"disc\">Disclaimer:</div> This picture will be\r\n                printed in the yearbook.\r\n              </h4>\r\n              <input\r\n                type=\"file\" id='imgip'\r\n                onChange={(event) => {\r\n                  setImageSelected(event.target.files[0])\r\n                }}\r\n              />\r\n              <button onClick={uploadImage} style={{ color: 'white' }}>\r\n                Upload Image\r\n              </button>\r\n              {imageUploaded && (\r\n                <h3 style={{ color: 'white' }}>Image Uploaded</h3>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Edit\r\n",
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Homepage\\Homepage.js",
  [
    "117",
    "118",
    "119",
    "120",
    "121",
    "122",
    "123",
    "124",
    "125",
    "126",
    "127",
    "128",
    "129",
    "130",
    "131",
    "132",
    "133"
  ],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\About\\About.js",
  ["134"],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Error\\Error.js",
  [],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Footer\\Footer.js",
  ["135", "136", "137", "138", "139", "140", "141", "142"],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\Otp Verification\\otpVerification.jsx",
  ["143", "144", "145", "146"],
  [],
  "C:\\My Files\\IIT Alumni Yearbook Portal\\Alumni-Cell-Yearbook-Portal\\client\\src\\components\\team\\members.js",
  [],
  [],
  {
    "ruleId": "147",
    "severity": 1,
    "message": "148",
    "line": 5,
    "column": 8,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 5,
    "endColumn": 14
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "151",
    "line": 19,
    "column": 10,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 19,
    "endColumn": 19
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "153",
    "line": 56,
    "column": 6,
    "nodeType": "154",
    "endLine": 56,
    "endColumn": 8,
    "suggestions": "155"
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "156",
    "line": 2,
    "column": 17,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 2,
    "endColumn": 26
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "157",
    "line": 20,
    "column": 6,
    "nodeType": "154",
    "endLine": 20,
    "endColumn": 8,
    "suggestions": "158"
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "159",
    "line": 2,
    "column": 29,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 2,
    "endColumn": 47
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "160",
    "line": 16,
    "column": 10,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 16,
    "endColumn": 14
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "161",
    "line": 89,
    "column": 5,
    "nodeType": "154",
    "endLine": 89,
    "endColumn": 7,
    "suggestions": "162"
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "163",
    "line": 131,
    "column": 1,
    "nodeType": "149",
    "endLine": 131,
    "endColumn": 10,
    "suggestions": "164"
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 177,
    "column": 9,
    "nodeType": "167",
    "endLine": 177,
    "endColumn": 36
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "168",
    "line": 12,
    "column": 5,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 12,
    "endColumn": 13
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "169",
    "line": 13,
    "column": 5,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 13,
    "endColumn": 16
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "170",
    "line": 14,
    "column": 5,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 14,
    "endColumn": 12
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "171",
    "line": 15,
    "column": 5,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 15,
    "endColumn": 15
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "157",
    "line": 37,
    "column": 6,
    "nodeType": "154",
    "endLine": 37,
    "endColumn": 8,
    "suggestions": "172"
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 352,
    "column": 17,
    "nodeType": "167",
    "endLine": 352,
    "endColumn": 47
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "171",
    "line": 9,
    "column": 47,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 9,
    "endColumn": 57
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "173",
    "line": 17,
    "column": 10,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 17,
    "endColumn": 18
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "157",
    "line": 35,
    "column": 6,
    "nodeType": "154",
    "endLine": 35,
    "endColumn": 8,
    "suggestions": "174"
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 156,
    "column": 17,
    "nodeType": "167",
    "endLine": 156,
    "endColumn": 74
  },
  {
    "ruleId": "175",
    "severity": 1,
    "message": "176",
    "line": 268,
    "column": 25,
    "nodeType": "177",
    "messageId": "178",
    "endLine": 303,
    "endColumn": 26
  },
  {
    "ruleId": "179",
    "severity": 1,
    "message": "180",
    "line": 307,
    "column": 23,
    "nodeType": "167",
    "endLine": 307,
    "endColumn": 65
  },
  {
    "ruleId": "181",
    "severity": 1,
    "message": "182",
    "line": 307,
    "column": 23,
    "nodeType": "167",
    "endLine": 307,
    "endColumn": 65
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "171",
    "line": 11,
    "column": 34,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 11,
    "endColumn": 44
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "183",
    "line": 11,
    "column": 46,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 11,
    "endColumn": 55
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "184",
    "line": 17,
    "column": 10,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 17,
    "endColumn": 14
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "185",
    "line": 17,
    "column": 16,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 17,
    "endColumn": 23
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "186",
    "line": 19,
    "column": 10,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 19,
    "endColumn": 26
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "163",
    "line": 23,
    "column": 3,
    "nodeType": "149",
    "endLine": 23,
    "endColumn": 12,
    "suggestions": "187"
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "157",
    "line": 42,
    "column": 6,
    "nodeType": "154",
    "endLine": 42,
    "endColumn": 8,
    "suggestions": "188"
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 152,
    "column": 35,
    "nodeType": "167",
    "endLine": 152,
    "endColumn": 78
  },
  {
    "ruleId": "189",
    "severity": 1,
    "message": "190",
    "line": 176,
    "column": 17,
    "nodeType": "167",
    "endLine": 176,
    "endColumn": 48
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "191",
    "line": 6,
    "column": 10,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 6,
    "endColumn": 21
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "192",
    "line": 20,
    "column": 3,
    "nodeType": "149",
    "endLine": 20,
    "endColumn": 12,
    "suggestions": "193"
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "157",
    "line": 34,
    "column": 6,
    "nodeType": "154",
    "endLine": 34,
    "endColumn": 8,
    "suggestions": "194"
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "195",
    "line": 56,
    "column": 3,
    "nodeType": "149",
    "endLine": 56,
    "endColumn": 12,
    "suggestions": "196"
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 352,
    "column": 17,
    "nodeType": "167",
    "endLine": 352,
    "endColumn": 47
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "197",
    "line": 3,
    "column": 10,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 3,
    "endColumn": 21
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "198",
    "line": 14,
    "column": 8,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 14,
    "endColumn": 15
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "157",
    "line": 34,
    "column": 6,
    "nodeType": "154",
    "endLine": 34,
    "endColumn": 8,
    "suggestions": "199"
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "200",
    "line": 40,
    "column": 9,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 40,
    "endColumn": 17
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "201",
    "line": 51,
    "column": 9,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 51,
    "endColumn": 15
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 90,
    "column": 19,
    "nodeType": "167",
    "endLine": 90,
    "endColumn": 56
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 122,
    "column": 17,
    "nodeType": "167",
    "endLine": 125,
    "endColumn": 18
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 199,
    "column": 17,
    "nodeType": "167",
    "endLine": 202,
    "endColumn": 18
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 216,
    "column": 17,
    "nodeType": "167",
    "endLine": 219,
    "endColumn": 18
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 247,
    "column": 17,
    "nodeType": "167",
    "endLine": 250,
    "endColumn": 18
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 311,
    "column": 17,
    "nodeType": "167",
    "endLine": 314,
    "endColumn": 18
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 342,
    "column": 17,
    "nodeType": "167",
    "endLine": 345,
    "endColumn": 18
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 393,
    "column": 21,
    "nodeType": "167",
    "endLine": 396,
    "endColumn": 22
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 410,
    "column": 21,
    "nodeType": "167",
    "endLine": 413,
    "endColumn": 22
  },
  {
    "ruleId": "181",
    "severity": 1,
    "message": "202",
    "line": 455,
    "column": 21,
    "nodeType": "167",
    "endLine": 455,
    "endColumn": 24
  },
  {
    "ruleId": "203",
    "severity": 1,
    "message": "204",
    "line": 476,
    "column": 15,
    "nodeType": "167",
    "messageId": "205",
    "endLine": 476,
    "endColumn": 50,
    "fix": "206"
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 492,
    "column": 17,
    "nodeType": "167",
    "endLine": 495,
    "endColumn": 18
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "157",
    "line": 18,
    "column": 6,
    "nodeType": "154",
    "endLine": 18,
    "endColumn": 8,
    "suggestions": "207"
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "208",
    "line": 1,
    "column": 17,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 1,
    "endColumn": 26
  },
  {
    "ruleId": "179",
    "severity": 1,
    "message": "180",
    "line": 50,
    "column": 13,
    "nodeType": "167",
    "endLine": 54,
    "endColumn": 14
  },
  {
    "ruleId": "179",
    "severity": 1,
    "message": "180",
    "line": 66,
    "column": 15,
    "nodeType": "167",
    "endLine": 70,
    "endColumn": 16
  },
  {
    "ruleId": "179",
    "severity": 1,
    "message": "180",
    "line": 71,
    "column": 15,
    "nodeType": "167",
    "endLine": 75,
    "endColumn": 16
  },
  {
    "ruleId": "179",
    "severity": 1,
    "message": "180",
    "line": 78,
    "column": 15,
    "nodeType": "167",
    "endLine": 82,
    "endColumn": 16
  },
  {
    "ruleId": "179",
    "severity": 1,
    "message": "180",
    "line": 83,
    "column": 15,
    "nodeType": "167",
    "endLine": 87,
    "endColumn": 16
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 91,
    "column": 13,
    "nodeType": "167",
    "endLine": 91,
    "endColumn": 67
  },
  {
    "ruleId": "165",
    "severity": 1,
    "message": "166",
    "line": 92,
    "column": 13,
    "nodeType": "167",
    "endLine": 92,
    "endColumn": 62
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "168",
    "line": 8,
    "column": 12,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 8,
    "endColumn": 20
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "209",
    "line": 8,
    "column": 35,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 8,
    "endColumn": 39
  },
  {
    "ruleId": "147",
    "severity": 1,
    "message": "210",
    "line": 9,
    "column": 12,
    "nodeType": "149",
    "messageId": "150",
    "endLine": 9,
    "endColumn": 19
  },
  {
    "ruleId": "152",
    "severity": 1,
    "message": "161",
    "line": 50,
    "column": 5,
    "nodeType": "154",
    "endLine": 50,
    "endColumn": 7,
    "suggestions": "211"
  },
  "no-unused-vars",
  "'Navbar' is defined but never used.",
  "Identifier",
  "unusedVar",
  "'useParams' is defined but never used.",
  "react-hooks/exhaustive-deps",
  "React Hook useEffect has a missing dependency: 'handleCallbackResponse'. Either include it or remove the dependency array.",
  "ArrayExpression",
  ["212"],
  "'Component' is defined but never used.",
  "React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.",
  ["213"],
  "'useRouteLoaderData' is defined but never used.",
  "'json' is defined but never used.",
  "React Hook useEffect has missing dependencies: 'setLoggedin' and 'setUser'. Either include them or remove the dependency array.",
  ["214"],
  "React Hook useEffect contains a call to 'setIsStudent'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [alumniEmail, user.email] as a second argument to the useEffect Hook.",
  ["215"],
  "jsx-a11y/alt-text",
  "img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",
  "JSXOpeningElement",
  "'loggedin' is assigned a value but never used.",
  "'setLoggedin' is assigned a value but never used.",
  "'profile' is assigned a value but never used.",
  "'setProfile' is assigned a value but never used.",
  ["216"],
  "'uploaded' is assigned a value but never used.",
  ["217"],
  "no-lone-blocks",
  "Nested block is redundant.",
  "BlockStatement",
  "redundantNestedBlock",
  "jsx-a11y/anchor-has-content",
  "Anchors must have content and the content must be accessible by a screen reader.",
  "jsx-a11y/anchor-is-valid",
  "The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",
  "'setResult' is assigned a value but never used.",
  "'name' is assigned a value but never used.",
  "'setName' is assigned a value but never used.",
  "'approvedComments' is assigned a value but never used.",
  ["218"],
  ["219"],
  "jsx-a11y/heading-has-content",
  "Headings must have content and the content must be accessible by a screen reader.",
  "'useLocation' is defined but never used.",
  "React Hook useEffect contains a call to 'setEmail'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user.email] as a second argument to the useEffect Hook.",
  ["220"],
  ["221"],
  "React Hook useEffect contains a call to 'setChanges'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [userPEmailOnLoad, userData.personal_email_id, userData.contact_details, userContactOnLoad] as a second argument to the useEffect Hook.",
  ["222"],
  "'useNavigate' is defined but never used.",
  "'step_22' is defined but never used.",
  ["223"],
  "'sentence' is assigned a value but never used.",
  "'letter' is assigned a value but never used.",
  "The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",
  "react/jsx-no-target-blank",
  "Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations",
  "noTargetBlankWithoutNoreferrer",
  { "range": "224", "text": "225" },
  ["226"],
  "'useEffect' is defined but never used.",
  "'fill' is assigned a value but never used.",
  "'message' is assigned a value but never used.",
  ["227"],
  { "desc": "228", "fix": "229" },
  { "desc": "230", "fix": "231" },
  { "desc": "232", "fix": "233" },
  { "desc": "234", "fix": "235" },
  { "desc": "230", "fix": "236" },
  { "desc": "230", "fix": "237" },
  { "desc": "234", "fix": "238" },
  { "desc": "230", "fix": "239" },
  { "desc": "240", "fix": "241" },
  { "desc": "230", "fix": "242" },
  { "desc": "243", "fix": "244" },
  { "desc": "230", "fix": "245" },
  [19708, 19708],
  " rel=\"noreferrer\"",
  { "desc": "230", "fix": "246" },
  { "desc": "232", "fix": "247" },
  "Update the dependencies array to be: [handleCallbackResponse]",
  { "range": "248", "text": "249" },
  "Update the dependencies array to be: [setLoading]",
  { "range": "250", "text": "251" },
  "Update the dependencies array to be: [setLoggedin, setUser]",
  { "range": "252", "text": "253" },
  "Add dependencies array: [alumniEmail, user.email]",
  { "range": "254", "text": "255" },
  { "range": "256", "text": "251" },
  { "range": "257", "text": "251" },
  { "range": "258", "text": "255" },
  { "range": "259", "text": "251" },
  "Add dependencies array: [user.email]",
  { "range": "260", "text": "261" },
  { "range": "262", "text": "251" },
  "Add dependencies array: [userPEmailOnLoad, userData.personal_email_id, userData.contact_details, userContactOnLoad]",
  { "range": "263", "text": "264" },
  { "range": "265", "text": "251" },
  { "range": "266", "text": "251" },
  { "range": "267", "text": "253" },
  [2218, 2220],
  "[handleCallbackResponse]",
  [613, 615],
  "[setLoading]",
  [2807, 2809],
  "[setLoggedin, setUser]",
  [3915, 3915],
  ", [alumniEmail, user.email]",
  [992, 994],
  [1201, 1203],
  [973, 973],
  [1232, 1234],
  [861, 861],
  ", [user.email]",
  [1063, 1065],
  [1939, 1939],
  ", [userPEmailOnLoad, userData.personal_email_id, userData.contact_details, userContactOnLoad]",
  [1137, 1139],
  [454, 456],
  [1484, 1486]
]
